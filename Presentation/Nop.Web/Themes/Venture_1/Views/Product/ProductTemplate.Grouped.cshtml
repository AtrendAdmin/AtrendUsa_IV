@model ProductDetailsModel
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-product-details-page");

    var seoSettings = EngineContext.Current.Resolve<SeoSettings>();

    //canonical URL
    if (seoSettings.CanonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(productUrl);
    }

    var showShareButton = EngineContext.Current.Resolve<Nop.Core.Domain.Catalog.CatalogSettings>().ShowShareButton;

    //open graph META tags
    if (seoSettings.OpenGraphMetaTags)
    {
        Html.AddHeadCustomParts("<meta property=\"og:type\" content=\"product\" />");
        Html.AddHeadCustomParts("<meta property=\"og:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:description\" content=\"" + Html.Encode(Nop.Core.Html.HtmlHelper.StripTags(Model.MetaDescription)) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:site_name\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
    }

    //Twitter META tags
    if (seoSettings.TwitterMetaTags)
    {
        Html.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(Nop.Core.Html.HtmlHelper.StripTags(Model.MetaDescription)) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
    }
}
<!--product breadcrumb-->
@section Breadcrumb
{
    @Html.Partial("_ProductBreadcrumb", Model.Breadcrumb)
}
@Html.Widget("productdetails_after_breadcrumb", Model.Id)
<div class="page product-details-page grouped-product-details-page">
    <div class="page-body">
        @Html.Widget("productdetails_top", Model.Id)
        @using (Html.BeginRouteForm("Product", new { SeName = Model.SeName }, FormMethod.Post, new { id = "product-details-form" }))
        {
            <div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
                <div class="product-essential-wrapper">
                    <div class="product-essential">
                        @Html.Widget("productdetails_before_pictures", Model.Id)
                        @{
                        var cloudZoom = Html.Widget("sevenspikes_cloud_zoom");
                        }
                        @if (!MvcHtmlString.IsNullOrEmpty(cloudZoom))
                    {
                    @cloudZoom
                    }
                    else
                    {
                    @Html.Partial("_ProductDetailsPictures", Model)
                    }
                        @Html.Widget("productdetails_after_pictures", Model.Id)
                        <div class="overview">
                            @Html.Widget("productdetails_overview_top", Model.Id)

                            <div class="product-name">
                                <h1 itemprop="name">
                                    @Model.Name
                                </h1>
                            </div>

                            @Html.Partial("_Discontinued", Model)

                            <!--product manufacturers-->
                            @Html.Partial("_ProductManufacturers", Model.ProductManufacturers)

                            <!--product reviews-->
                            @Html.Partial("_ProductReviewOverview", Model.ProductReviewOverview)

                            @if (!String.IsNullOrEmpty(Model.ShortDescription))
                            {
                                <div class="short-description">
                                    @Html.Raw(Model.ShortDescription)
                                </div>
                            }

                            <!--compare, email a friend-->
                            <div class="overview-buttons">
                                @Html.Widget("productdetails_inside_overview_buttons_before", Model.Id)

                                <!--compare button-->
                                @if (Model.CompareProductsEnabled)
                                {
                                    <div class="compare-products-wrapper" title="@T("products.compare.addtocomparelist")">
                                        @Html.Partial("_CompareProductsButton", Model)
                                    </div>
                                }

                                <!--email a friend button-->
                                @if (Model.EmailAFriendEnabled)
                                {
                                    <div class="email-a-friend-button-wrapper" title="@T("products.emailafriend")">
                                        @Html.Partial("_ProductEmailAFriendButton", Model)
                                    </div>
                                }  

                                @Html.Widget("productdetails_inside_overview_buttons_after", Model.Id)
                            </div>

                            @if (showShareButton)
                            {
                                @Html.Partial("_ShareButton", Model)
                            }
                            @Html.Widget("productdetails_overview_bottom", Model.Id)
                        </div>
                    </div>
                </div>
                <div class="product-page-bottom">
                    @Html.Widget("productdetails_before_collateral", Model.Id)
                    <div class="product-collateral">
                        @if (!String.IsNullOrEmpty(Model.FullDescription))
                        {
                            <div class="full-description-wrapper">
                                <div class="title">
                                    <strong>@T("SevenSpikes.Themes.Venture.Common.ProductPageFullDescription")</strong>
                                </div>
                                <div class="full-description" itemprop="description">
                                    @Html.Raw(Model.FullDescription)
                                </div>
                            </div>
                        }
                        <!--associated products-->
                        <div class="product-variant-list">
                            @foreach (var variant in Model.AssociatedProducts)
                            {
                                <div class="product-variant-line" data-productid="@variant.Id">
                                    @if (!String.IsNullOrWhiteSpace(variant.DefaultPictureModel.ImageUrl))
                                    {
                                        <div class="variant-picture">
                                            <img alt="@variant.DefaultPictureModel.AlternateText" src="@variant.DefaultPictureModel.ImageUrl"
                                                 title="@variant.DefaultPictureModel.Title" id="main-product-img-@variant.Id" />
                                        </div>
                                    }
                                    <div class="variant-overview">
                                        @if (!String.IsNullOrWhiteSpace(variant.Name))
                                        {
                                            <div class="variant-name">
                                                @variant.Name
                                            </div>
                                        }
                                        @if (!String.IsNullOrWhiteSpace(variant.ShortDescription))
                                        {
                                            <div class="variant-description">
                                                @Html.Raw(variant.ShortDescription)
                                            </div>
                                        }

                                        <!--SKU, MAN, GTIN, vendor-->
                                        @Html.Partial("_SKU_Man_GTIN_Ven", variant)

                                        <!--delivery-->
                                        @Html.Partial("_DeliveryInfo", variant)                                  

                                        <!--price breaks-->
                                        @Html.Partial("_ProductTierPrices", variant.TierPrices)


 
                                        <!--attributes-->
                                        @{
                                            var dataDictAttributes = new ViewDataDictionary();
                                            dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", variant.Id);
                                            @Html.Partial("_ProductAttributes", variant.ProductAttributes, dataDictAttributes)
                                        }
                                        <!--rental info-->
                                        @{
                                            var dataDictRental = new ViewDataDictionary();
                                            dataDictRental.TemplateInfo.HtmlFieldPrefix = string.Format("rental_{0}", variant.Id);
                                            @Html.Partial("_RentalInfo", variant, dataDictRental)
                                        }
                                        <!--availability-->
                                        @if (!String.IsNullOrWhiteSpace(Model.StockAvailability))
                                        {
                                            <div class="availability">
                                                <div class="stock">
                                                    <span class="label">@T("Products.Availability"):</span>
                                                    <span class="value" id="stock-availability-value-@Model.Id">@Model.StockAvailability</span>
                                                </div>
                                            </div>
                                        }

                                        <!--gift card-->
                                        @{
                                            var dataDictGiftCard = new ViewDataDictionary();
                                            dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = string.Format("giftcard_{0}", variant.Id);
                                            @Html.Partial("_GiftCardInfo", variant.GiftCard, dataDictGiftCard)
                                        }

                                        <!--minimum quantity notification-->
                                        @if (!String.IsNullOrEmpty(Model.AddToCart.MinimumQuantityNotification))
                                        {
                                            <div class="min-qty-notification">@Model.AddToCart.MinimumQuantityNotification</div>
                                        }

                                        <div class="variant-overview-footer">
                                            <!--price-->
                                            @{
                                                var dataDictPrice = new ViewDataDictionary();
                                                dataDictPrice.TemplateInfo.HtmlFieldPrefix = string.Format("price_{0}", variant.Id);
                                                @Html.Partial("_ProductPrice", variant.ProductPrice, dataDictPrice)
                                            }

                                            <div class="overview-buttons variant-overview-buttons">

                                                @{
                                                    var dataDictAddToCart = new ViewDataDictionary();
                                                    dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", variant.Id);
                                                    @Html.Partial("_AddToCart", variant.AddToCart, dataDictAddToCart)
                                                }

                                                <!--sample download button-->
                                                @if (Model.HasSampleDownload)
                                                {
                                                    <div class="download-sample-button-wrapper" title="@T("products.downloadsample")">
                                                        @Html.Partial("_DownloadSample", Model)
                                                    </div>
                                                }

                                                <!--back in stock subscription button-->
                                                @if (!String.IsNullOrWhiteSpace(Model.StockAvailability) && Model.DisplayBackInStockSubscription)
                                                {
                                                    <div class="back-in-stock-subscription-button-wrapper" title="@T("backinstocksubscriptions.notifymewhenavailable")">
                                                        @Html.Partial("_BackInStockSubscription", Model)
                                                    </div>
                                                }

                                                <!--wishlist-->
                                                @if (!Model.AddToCart.DisableWishlistButton)
                                                {
                                                    <div class="wishlist-button-wrapper" title="@T("products.wishlist.addtowishlist")">
                                                        @{
                                                            var dataDictAddToWishlist = new ViewDataDictionary();
                                                            dataDictAddToWishlist.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
                                                            @Html.Partial("_AddToWishlist", Model.AddToCart, dataDictAddToWishlist)
                                                        }
                                                    </div>
                                                }  
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            @if (Model.AssociatedProducts.Count == 0)
                            {
                                <div class="no-associated-products">
                                    @T("Products.NoAssociatedProducts")
                                </div>
                            }
                        </div>
                        @Html.Partial("_ProductSpecifications", Model.ProductSpecifications)
                        @Html.Partial("_ProductTags", Model.ProductTags)
                    </div>
                    @*we do not display "also purchased" for grouped products
                    @Html.Action("ProductsAlsoPurchased", "Product", new { productId = Model.Id })*@
                    @Html.Action("RelatedProducts", "Product", new { productId = Model.Id })
                </div>
            </div>
        }
        @Html.Widget("productdetails_bottom", Model.Id)
    </div>
</div>
